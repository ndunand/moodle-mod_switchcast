<?php
require_once('./Customizing/global/plugins/Services/Repository/RepositoryObject/OpenCast/classes/Object/class.xoctObject.php');

/**
 * Class xoctMetadata
 *
 * @author  Fabian Schmid <fs@studer-raimann.ch>
 * @version 1.0.0
 */
class xoctMetadata extends xoctObject {

    /**
     * @param $flavor
     *
     * @return xoctMetadata
     */
    public static function getSet($flavor) {
        $obj = new self();
        $obj->setFlavor($flavor);

        return $obj;
    }

    const FLAVOR_DUBLINCORE_SERIES = "dublincore/series";
    const FLAVOR_DUBLINCORE_EPISODES = "dublincore/episode";
    /**
     * @var string
     */
    protected $label = '';
    /**
     * @var string
     */
    protected $flavor = '';
    /**
     * @var xoctMetadataField[]
     */
    protected $fields = [];

    /**
     * @param $field_name
     *
     * @return xoctMetadataField
     */
    public function getField($field_name) {
        if (isset($this->fields[$field_name])) {
            return $this->fields[$field_name];
        }
        $field = new xoctMetadataField();
        $field->setId($field_name);

        return $field;
    }
    //	public function loadFromArray($array) {
    //		parent::loadFromArray($array); // TODO: Change the autogenerated stub
    //	}

    public function read() {
        // TODO: Implement read() method.
    }

    public function update() {
        // TODO: Implement update() method.
    }

    public function create() {
        // TODO: Implement create() method.
    }

    public function delete() {
        // TODO: Implement delete() method.
    }

    protected function afterObjectLoad() {
        //		$arr = $this->getFields();
        //		foreach ($arr as $a) {
        //
        //		}
    }

    public function loadFromArray($array) {
        parent::loadFromArray($array);
        $fields = [];
        foreach ($this->getFields() as $f) {
            //			var_dump($f); // FSX
            $field = new xoctMetadataField();
            $field->loadFromArray($f);
            $fields[$field->getId()] = $field;
        }
        $this->setFields($fields);
    }

    /**
     * @param xoctMetadataField $xoctMetadataField
     */
    public function addField(xoctMetadataField $xoctMetadataField) {
        $this->fields[] = $xoctMetadataField;
    }

    /**
     * @return string
     */
    public function getFlavor() {
        return $this->flavor;
    }

    /**
     * @param string $flavor
     */
    public function setFlavor($flavor) {
        $this->flavor = $flavor;
    }

    /**
     * @return string
     */
    public function getLabel() {
        return $this->label;
    }

    /**
     * @param string $label
     */
    public function setLabel($label) {
        $this->label = $label;
    }

    /**
     * @return xoctMetadataField[]
     */
    public function getFields() {
        return $this->fields;
    }

    /**
     * @param xoctMetadataField[] $fields
     */
    public function setFields($fields) {
        $this->fields = $fields;
    }
}

/**
 * Class xoctMetadataField
 *
 * @author Fabian Schmid <fs@studer-raimann.ch>
 */
class xoctMetadataField extends xoctObject {

    /**
     * @var string
     */
    protected $id = '';
    /**
     * @var string
     */
    protected $read_only = false;
    /**
     * @var string
     */
    protected $value = '';
    /**
     * @var string
     */
    protected $label = '';
    /**
     * @var string
     */
    protected $type = '';
    /**
     * @var bool
     */
    protected $required = true;
    /**
     * @var array
     */
    protected $collection = [];

    /**
     * @return string
     */
    public function getId() {
        return $this->id;
    }

    /**
     * @param string $id
     */
    public function setId($id) {
        $this->id = $id;
    }

    /**
     * @return string
     */
    public function getReadOnly() {
        return $this->read_only;
    }

    /**
     * @param string $read_only
     */
    public function setReadOnly($read_only) {
        $this->read_only = $read_only;
    }

    /**
     * @return string
     */
    public function getValue() {
        return $this->value;
    }

    /**
     * @param string $value
     */
    public function setValue($value) {
        $this->value = $value;
    }

    /**
     * @return string
     */
    public function getLabel() {
        return $this->label;
    }

    /**
     * @param string $label
     */
    public function setLabel($label) {
        $this->label = $label;
    }

    /**
     * @return string
     */
    public function getType() {
        return $this->type;
    }

    /**
     * @param string $type
     */
    public function setType($type) {
        $this->type = $type;
    }

    /**
     * @return boolean
     */
    public function isRequired() {
        return $this->required;
    }

    /**
     * @param boolean $required
     */
    public function setRequired($required) {
        $this->required = $required;
    }

    /**
     * @return array
     */
    public function getCollection() {
        return $this->collection;
    }

    /**
     * @param array $collection
     */
    public function setCollection($collection) {
        $this->collection = $collection;
    }
}

?>
